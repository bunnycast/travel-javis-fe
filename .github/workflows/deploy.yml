# .github/workflows/deploy.yml
name: CI/CD Deploy to NKS

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image (Frontend)
        run: docker build -t rosco0611/javis-fe:latest "$GITHUB_WORKSPACE"

      - name: Push Docker image (Frontend)
        run: docker push rosco0611/javis-fe:latest

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.27.1/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - name: Install NCP IAM Authenticator
        run: |
          sudo curl -L -o /usr/local/bin/ncp-iam-authenticator \
            https://github.com/NaverCloudPlatform/ncp-iam-authenticator/releases/latest/download/ncp-iam-authenticator_linux_amd64
          sudo chmod +x /usr/local/bin/ncp-iam-authenticator

      - name: Prepare Ncloud credentials
        env:
          NCP_ACCESS_KEY: ${{ secrets.NCP_ACCESS_KEY }}
          NCP_SECRET_KEY: ${{ secrets.NCP_SECRET_KEY }}
        run: |
          echo "NCLOUD_ACCESS_KEY=${{ secrets.NCLOUD_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "NCLOUD_SECRET_KEY=${{ secrets.NCLOUD_SECRET_KEY }}" >> $GITHUB_ENV
          sudo mkdir -p /home/runner/.ncloud
          printf '[default]\nncloud_access_key_id = %s\nncloud_secret_access_key = %s\nregion = kr\n' "$NCP_ACCESS_KEY" "$NCP_SECRET_KEY" | sudo tee /home/runner/.ncloud/configure > /dev/null
          sudo chmod 777 /home/runner/.ncloud/configure

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG_B64 }}" | base64 -d | tee ~/.kube/config > /dev/null
          chmod 600 ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f "$GITHUB_WORKSPACE/k8s/clusterissuer.yaml"
          kubectl apply -f "$GITHUB_WORKSPACE/k8s/backend.yaml"
          kubectl apply -f "$GITHUB_WORKSPACE/k8s/frontend.yaml"
          kubectl apply -f "$GITHUB_WORKSPACE/k8s/ingress.yaml"